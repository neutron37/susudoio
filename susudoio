#!/bin/bash

# <<YAMLDOC
# namespace: /neutron37/susudoio
# description: "Wraps of su and sudo for non-admin OS-X users."
# copyright: "Neutron37"
# authors: "neutron37@hauskreativ.com"
# tags: su sudo susudoio
# YAMLDOC

set -euo pipefail

###############
## Path vars ##
###############
readonly SCRIPT_REALPATH="$( perl -MCwd=abs_path -le 'print abs_path readlink(shift);' ${BASH_SOURCE[0]} )"
readonly SCRIPT_DIR="$( cd "$( dirname ${SCRIPT_REALPATH} )" && pwd )"
readonly INCLUDES_DIR="${SCRIPT_DIR}/includes"

##############
## Includes ##
##############
source "${INCLUDES_DIR}/neutron37_bashlib.sh"
source "${INCLUDES_DIR}/susudoio.sh"

##########
## Vars ##
##########
readonly USER_PWD=$( pwd )
readonly ADMIN_USER_DEFAULT=$( susudoio::members admin | grep -v root | head -n1 )
readonly TARGET_USER_DEFAULT=$( whoami )

##########
## Args ##
##########

# Parse Command Line Arguments
while [ "$#" -gt 0 ]; do
  case "$1" in
    -a)
        ARG_ADMIN_FLAG=1
        ;;
    --admin-pass=*)
        ARG_ADMIN_PASS="${1#*=}"
        ;;
    --admin-user=*)
        ARG_ADMIN_USER="${1#*=}"
        ;;
    --target-user=*)
        ARG_TARGET_USER="${1#*=}"
        ;;
    --help) susudoio::help;;
    *)
      break
  esac
  shift
done

COMMAND="$@"

##########
## Main ##
##########

# Gather user info including admin authentication credentials.
susudoio::set_admin_flag
susudoio::set_admin_user
susudoio::set_admin_password
susudoio::set_target_user

export SUSUDOIO_TARGET="${TARGET_USER}"
export SUSUDOIO_ADMIN="${ADMIN_USER}"

susudoio::become "${COMMAND}"
exit "$?"